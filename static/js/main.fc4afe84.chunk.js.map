{"version":3,"sources":["components/Header.js","components/Card.js","components/ListShuffle.js","components/photos.js","App.js","index.js"],"names":["Header","props","score","bestScore","Card","onClick","card","id","className","src","url","alt","name","randomNumberInRange","range","Math","floor","random","listShuffle","list","newList","length","reducedList","i","randomNumber","push","pop","photos","clicked","App","useState","setScore","setBestScore","cards","setCards","startNewGame","findBestScore","useEffect","cardClicked","newCards","gameContinue","forEach","console","log","readyCards","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc4afe84.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n    return (\n        <header >\n            <h2>Memory Game</h2>\n            <h3>Get points by clicking on an image but don't click on any more than once!</h3>\n            <h4>Current score: {props.score}</h4>\n            <h4>Your the best score: {props.bestScore}</h4>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div onClick={() => props.onClick(props.card.id)}  className ='card'>\n            <img src={props.card.url} alt={props.card.name}/>\n            <h3 className ='card-name'>{props.card.name}</h3>\n        </div>\n    );\n};\n\nexport default Card;","const listShuffle = (list) => {\n    let newList = [];\n    let length = list.length;\n    let reducedList = [...list];\n    for (let i=0; i < length; i++) {\n        let randomNumber = randomNumberInRange(reducedList.length);\n        newList.push(reducedList[randomNumber]);\n        [reducedList[reducedList.length -1],  reducedList[randomNumber]] = [reducedList[randomNumber], reducedList[reducedList.length -1]];\n        reducedList.pop();\n    }\n    return newList;\n};\n\nconst randomNumberInRange = (range) => {\n    return Math.floor(Math.random() * (range));\n};\n\nexport default  listShuffle;","const photos = [\n    {\n        url: './images/abra.png',\n        clicked: false,\n        id: 1,\n        name: 'Abra'\n    }, \n    {\n        url: './images/bulbasaur.png',\n        clicked: false,\n        id: 2,\n        name: 'Bulbasaur'\n    },\n    {\n        url: './images/charmander.png',\n        clicked: false,\n        id: 3,\n        name: 'Charmander'\n    },\n    {\n        url: './images/clefairy.png',\n        clicked: false,\n        id: 4,\n        name: 'Clefairy'\n    },\n    {\n        url: './images/jigglypuff.png',\n        clicked: false,\n        id: 5,\n        name: 'Jigglypuff'\n    },\n    {\n        url: './images/meowth.png',\n        clicked: false,\n        id: 6,\n        name: 'Meowth'\n    },\n    {\n        url: './images/oddish.png',\n        clicked: false,\n        id: 7,\n        name: 'Oddish'\n    },\n    {\n        url: './images/pikachu.png',\n        clicked: false,\n        id: 8,\n        name: 'Pikachu'\n    },\n    {\n        url: './images/sandshrew.png',\n        clicked: false,\n        id: 9,\n        name: 'Sandshrew'\n    },\n    {\n        url: './images/squirtle.png',\n        clicked: false,\n        id: 10,\n        name: 'Squirtle'\n    },\n    {\n        url: './images/vulpix.png',\n        clicked: false,\n        id: 11,\n        name: 'Vulpix'\n    },\n    {\n        url: './images/weepinbell.png',\n        clicked: false,\n        id: 12,\n        name: 'Weepinbell'\n    }\n];\n\nexport default photos;\n","import React, { useState, useEffect} from 'react';\nimport Header from './components/Header.js';\nimport Card from './components/Card.js';\nimport listShuffle from './components/ListShuffle.js';\n\nimport photos from './components/photos.js';\n\nfunction App() {\n    const [score, setScore] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [cards, setCards] = useState(photos);\n\n    const findBestScore= (score) => {\n        if (score > bestScore) {\n            setBestScore(score);\n        }\n    };\n\n    const startNewGame = () => {\n        setScore(0);\n        findBestScore(score);\n        setCards(photos);\n    };\n\n    useEffect(() => {\n        setCards(listShuffle(cards));\n    }, [score]);\n\n    const cardClicked = (id) => {\n        const newCards = [];\n        let gameContinue = true;\n        cards.forEach(card => {\n            if (id === card.id && !card.clicked) {\n                newCards.push({\n                    ...card,\n                    clicked: true});\n                setScore(score+1);\n            } else if (id === card.id && card.clicked) {\n                gameContinue = false;\n            } else {\n                newCards.push(card);\n            }\n        });\n        if (gameContinue) {\n            setCards(newCards);\n        } else {\n            startNewGame();\n            console.log('Game ends');\n        }\n    };\n\n    const readyCards = cards.map(card => {\n        return (\n            <Card card={card} onClick = {cardClicked} key={card.id}/>\n        );\n    });\n\n    return (\n        <div>\n            <Header score={score} bestScore={bestScore}/>\n            <div className='card-container'>\n                {readyCards}\n            </div>\n            <footer>&copy; Olga Milczek</footer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}